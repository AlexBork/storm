#
# General config
#
branches:
  only:
  - master
  - stable
sudo: required
dist: trusty
language: cpp

# Enable caching
cache:
  timeout: 1000
  directories:
  - build
  - travis/mtime_cache

# Enable docker support
services:
- docker

notifications:
  email:
    on_failure: always
    on_success: change
    recipients:
    secure: "BoMQTBWnkh4ZLIHEaKu0tAKDohhVmOQ2pz/fjc+ScKG8mtvXqtpx0TiyePOUV1MuYNZiAP7x4mwABcoid55SwZ4+LPjd8uxXNfOji9B9GW5YqbqRvAeh7Es7dx48MyLYPIezjoryHH9R3Q2zZ9gmxgtw5eirjURcLNTXpKAwq/oOsKvh+vhOx4Qierw98wEXjMV7ipBzE4cfkgUbbX7oxGh1nsAsCew+rRmNLijfmE9tctYdH5W0wE+zC9ik+12Xyk3FwsDIABirPHfeCcEl+b9I0h1a2vZSZIA+sCDkIGKTiv9pCnsthn5LJc9pMLX7B/Wf6xLGMzpSiw3P1ZzjXpOE026WuyhTMVXqZYvbl7cJoNZiLCfTYg3MQVq5NHkq0h0jInIH7QlZYd0hZPOGONwdy17O1QmnX2Weq6G+Ps9siLVKFba37+y5PfRYkiUatJvDf2f7Jdxye6TWrUmlxQkAvs65ioyr8doad7IT1/yaGr/rBpXeQqZp6zNoMYr/cCRAYX6nOrnSszgiIWEc8QMMx+G31v77Uvd++9VG4MG9gbdpexpfYRNzKAxDarSaYEOuaWm2Z6R87bpNcjA+tW0hnBHBzRx0NFYYqXyW0tpVO9+035A9CHrLDLz77r4jJttcRvrP2rTbTBiwuhpmiufRyk3BuWlgzU3yaSuQV3M="

#
# Configurations
#
jobs:
  include:

    ###
    # Stage: Build Carl
    ###

    # ubuntu-17.10 - DefaultDebugTravis
    - stage: Build Carl
      os: linux
      compiler: gcc
      env: CONFIG=DefaultDebugTravis LINUX=ubuntu-17.10 COMPILER=gcc
      install:
        - travis/install_linux.sh
      script:
        - travis/build_carl.sh
      after_success:
        - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD";
        - docker commit carl movesrwth/carl:travis-debug;
        - docker push movesrwth/carl:travis-debug;
    # ubuntu-17.10 - DefaultReleaseTravis
    - stage: Build Carl
      os: linux
      compiler: gcc
      env: CONFIG=DefaultReleaseTravis LINUX=ubuntu-17.10 COMPILER=gcc
      install:
        - travis/install_linux.sh
      script:
        - travis/build_carl.sh
      after_success:
        - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD";
        - docker commit carl movesrwth/carl:travis;
        - docker push movesrwth/carl:travis;

    ###
    # Stage: Build (1st run)
    ###

    # debian-9 - DefaultDebug
    - stage: Build (1st run)
      os: linux
      compiler: gcc
      env: CONFIG=DefaultDebug LINUX=debian-9 COMPILER=gcc
      install:
        - rm -rf build
        - travis/install_linux.sh
      script:
        - travis/build.sh Build1
      before_cache:
        - docker cp storm:/opt/storm/. .
      after_failure:
        - find build -iname '*err*.log' -type f -print -exec cat {} \;
    # debian-9 - DefaultRelease
    - stage: Build (1st run)
      os: linux
      compiler: gcc
      env: CONFIG=DefaultRelease LINUX=debian-9 COMPILER=gcc
      install:
        - rm -rf build
        - travis/install_linux.sh
      script:
        - travis/build.sh Build1
      before_cache:
        - docker cp storm:/opt/storm/. .
      after_failure:
        - find build -iname '*err*.log' -type f -print -exec cat {} \;
    # ubuntu-17.10 - DefaultDebugTravis
    - stage: Build (1st run)
      os: linux
      compiler: gcc
      env: CONFIG=DefaultDebugTravis LINUX=ubuntu-17.10 COMPILER=gcc
      install:
        - rm -rf build
        - travis/install_linux.sh
      script:
        - travis/build.sh Build1
      before_cache:
        - docker cp storm:/opt/storm/. .
      after_failure:
        - find build -iname '*err*.log' -type f -print -exec cat {} \;
    # ubuntu-17.10 - DefaultReleaseTravis
    - stage: Build (1st run)
      os: linux
      compiler: gcc
      env: CONFIG=DefaultReleaseTravis LINUX=ubuntu-17.10 COMPILER=gcc
      install:
        - rm -rf build
        - travis/install_linux.sh
      script:
        - travis/build.sh Build1
      before_cache:
        - docker cp storm:/opt/storm/. .
      after_failure:
        - find build -iname '*err*.log' -type f -print -exec cat {} \;
    # ubuntu-18.04 - DefaultDebug
    - stage: Build (1st run)
      os: linux
      compiler: gcc
      env: CONFIG=DefaultDebug LINUX=ubuntu-18.04 COMPILER=gcc
      install:
        - rm -rf build
        - travis/install_linux.sh
      script:
        - travis/build.sh Build1
      before_cache:
        - docker cp storm:/opt/storm/. .
      after_failure:
        - find build -iname '*err*.log' -type f -print -exec cat {} \;
    # ubuntu-18.04 - DefaultRelease
    - stage: Build (1st run)
      os: linux
      compiler: gcc
      env: CONFIG=DefaultRelease LINUX=ubuntu-18.04 COMPILER=gcc
      install:
        - rm -rf build
        - travis/install_linux.sh
      script:
        - travis/build.sh Build1
      before_cache:
        - docker cp storm:/opt/storm/. .
      after_failure:
        - find build -iname '*err*.log' -type f -print -exec cat {} \;

    ###
    # Stage: Build (2nd run)
    ###

    # debian-9 - DefaultDebug
    - stage: Build (2nd run)
      os: linux
      compiler: gcc
      env: CONFIG=DefaultDebug LINUX=debian-9 COMPILER=gcc
      install:
        - travis/install_linux.sh
      script:
        - travis/build.sh Build2
      before_cache:
        - docker cp storm:/opt/storm/. .
      after_failure:
        - find build -iname '*err*.log' -type f -print -exec cat {} \;
    # debian-9 - DefaultRelease
    - stage: Build (2nd run)
      os: linux
      compiler: gcc
      env: CONFIG=DefaultRelease LINUX=debian-9 COMPILER=gcc
      install:
        - travis/install_linux.sh
      script:
        - travis/build.sh Build2
      before_cache:
        - docker cp storm:/opt/storm/. .
      after_failure:
        - find build -iname '*err*.log' -type f -print -exec cat {} \;
    # ubuntu-17.10 - DefaultDebugTravis
    - stage: Build (2nd run)
      os: linux
      compiler: gcc
      env: CONFIG=DefaultDebugTravis LINUX=ubuntu-17.10 COMPILER=gcc
      install:
        - travis/install_linux.sh
      script:
        - travis/build.sh Build2
      before_cache:
        - docker cp storm:/opt/storm/. .
      after_failure:
        - find build -iname '*err*.log' -type f -print -exec cat {} \;
    # ubuntu-17.10 - DefaultReleaseTravis
    - stage: Build (2nd run)
      os: linux
      compiler: gcc
      env: CONFIG=DefaultReleaseTravis LINUX=ubuntu-17.10 COMPILER=gcc
      install:
        - travis/install_linux.sh
      script:
        - travis/build.sh Build2
      before_cache:
        - docker cp storm:/opt/storm/. .
      after_failure:
        - find build -iname '*err*.log' -type f -print -exec cat {} \;
    # ubuntu-18.04 - DefaultDebug
    - stage: Build (2nd run)
      os: linux
      compiler: gcc
      env: CONFIG=DefaultDebug LINUX=ubuntu-18.04 COMPILER=gcc
      install:
        - travis/install_linux.sh
      script:
        - travis/build.sh Build2
      before_cache:
        - docker cp storm:/opt/storm/. .
      after_failure:
        - find build -iname '*err*.log' -type f -print -exec cat {} \;
    # ubuntu-18.04 - DefaultRelease
    - stage: Build (2nd run)
      os: linux
      compiler: gcc
      env: CONFIG=DefaultRelease LINUX=ubuntu-18.04 COMPILER=gcc
      install:
        - travis/install_linux.sh
      script:
        - travis/build.sh Build2
      before_cache:
        - docker cp storm:/opt/storm/. .
      after_failure:
        - find build -iname '*err*.log' -type f -print -exec cat {} \;

    ###
    # Stage: Build (3rd run)
    ###

    # debian-9 - DefaultDebug
    - stage: Build (3rd run)
      os: linux
      compiler: gcc
      env: CONFIG=DefaultDebug LINUX=debian-9 COMPILER=gcc
      install:
        - travis/install_linux.sh
      script:
        - travis/build.sh Build3
      before_cache:
        - docker cp storm:/opt/storm/. .
      after_failure:
        - find build -iname '*err*.log' -type f -print -exec cat {} \;
    # debian-9 - DefaultRelease
    - stage: Build (3rd run)
      os: linux
      compiler: gcc
      env: CONFIG=DefaultRelease LINUX=debian-9 COMPILER=gcc
      install:
        - travis/install_linux.sh
      script:
        - travis/build.sh Build3
      before_cache:
        - docker cp storm:/opt/storm/. .
      after_failure:
        - find build -iname '*err*.log' -type f -print -exec cat {} \;
    # ubuntu-17.10 - DefaultDebugTravis
    - stage: Build (3rd run)
      os: linux
      compiler: gcc
      env: CONFIG=DefaultDebugTravis LINUX=ubuntu-17.10 COMPILER=gcc
      install:
        - travis/install_linux.sh
      script:
        - travis/build.sh Build3
      before_cache:
        - docker cp storm:/opt/storm/. .
      after_failure:
        - find build -iname '*err*.log' -type f -print -exec cat {} \;
    # ubuntu-17.10 - DefaultReleaseTravis
    - stage: Build (3rd run)
      os: linux
      compiler: gcc
      env: CONFIG=DefaultReleaseTravis LINUX=ubuntu-17.10 COMPILER=gcc
      install:
        - travis/install_linux.sh
      script:
        - travis/build.sh Build3
      before_cache:
        - docker cp storm:/opt/storm/. .
      after_failure:
        - find build -iname '*err*.log' -type f -print -exec cat {} \;
    # ubuntu-18.04 - DefaultDebug
    - stage: Build (3rd run)
      os: linux
      compiler: gcc
      env: CONFIG=DefaultDebug LINUX=ubuntu-18.04 COMPILER=gcc
      install:
        - travis/install_linux.sh
      script:
        - travis/build.sh Build3
      before_cache:
        - docker cp storm:/opt/storm/. .
      after_failure:
        - find build -iname '*err*.log' -type f -print -exec cat {} \;
    # ubuntu-18.04 - DefaultRelease
    - stage: Build (3rd run)
      os: linux
      compiler: gcc
      env: CONFIG=DefaultRelease LINUX=ubuntu-18.04 COMPILER=gcc
      install:
        - travis/install_linux.sh
      script:
        - travis/build.sh Build3
      before_cache:
        - docker cp storm:/opt/storm/. .
      after_failure:
        - find build -iname '*err*.log' -type f -print -exec cat {} \;

    ###
    # Stage: Build (4th run)
    ###

    # debian-9 - DefaultDebug
    - stage: Build (4th run)
      os: linux
      compiler: gcc
      env: CONFIG=DefaultDebug LINUX=debian-9 COMPILER=gcc
      install:
        - travis/install_linux.sh
      script:
        - travis/build.sh BuildLast
      before_cache:
        - docker cp storm:/opt/storm/. .
      after_failure:
        - find build -iname '*err*.log' -type f -print -exec cat {} \;
    # debian-9 - DefaultRelease
    - stage: Build (4th run)
      os: linux
      compiler: gcc
      env: CONFIG=DefaultRelease LINUX=debian-9 COMPILER=gcc
      install:
        - travis/install_linux.sh
      script:
        - travis/build.sh BuildLast
      before_cache:
        - docker cp storm:/opt/storm/. .
      after_failure:
        - find build -iname '*err*.log' -type f -print -exec cat {} \;
    # ubuntu-17.10 - DefaultDebugTravis
    - stage: Build (4th run)
      os: linux
      compiler: gcc
      env: CONFIG=DefaultDebugTravis LINUX=ubuntu-17.10 COMPILER=gcc
      install:
        - travis/install_linux.sh
      script:
        - travis/build.sh BuildLast
      before_cache:
        - docker cp storm:/opt/storm/. .
      after_failure:
        - find build -iname '*err*.log' -type f -print -exec cat {} \;
    # ubuntu-17.10 - DefaultReleaseTravis
    - stage: Build (4th run)
      os: linux
      compiler: gcc
      env: CONFIG=DefaultReleaseTravis LINUX=ubuntu-17.10 COMPILER=gcc
      install:
        - travis/install_linux.sh
      script:
        - travis/build.sh BuildLast
      before_cache:
        - docker cp storm:/opt/storm/. .
      after_failure:
        - find build -iname '*err*.log' -type f -print -exec cat {} \;
    # ubuntu-18.04 - DefaultDebug
    - stage: Build (4th run)
      os: linux
      compiler: gcc
      env: CONFIG=DefaultDebug LINUX=ubuntu-18.04 COMPILER=gcc
      install:
        - travis/install_linux.sh
      script:
        - travis/build.sh BuildLast
      before_cache:
        - docker cp storm:/opt/storm/. .
      after_failure:
        - find build -iname '*err*.log' -type f -print -exec cat {} \;
    # ubuntu-18.04 - DefaultRelease
    - stage: Build (4th run)
      os: linux
      compiler: gcc
      env: CONFIG=DefaultRelease LINUX=ubuntu-18.04 COMPILER=gcc
      install:
        - travis/install_linux.sh
      script:
        - travis/build.sh BuildLast
      before_cache:
        - docker cp storm:/opt/storm/. .
      after_failure:
        - find build -iname '*err*.log' -type f -print -exec cat {} \;

    ###
    # Stage: Test all
    ###

    # debian-9 - DefaultDebug
    - stage: Test all
      os: linux
      compiler: gcc
      env: CONFIG=DefaultDebug LINUX=debian-9 COMPILER=gcc
      install:
        - travis/install_linux.sh
      script:
        - travis/build.sh TestAll
      before_cache:
        - docker cp storm:/opt/storm/. .
      after_failure:
        - find build -iname '*err*.log' -type f -print -exec cat {} \;
    # debian-9 - DefaultRelease
    - stage: Test all
      os: linux
      compiler: gcc
      env: CONFIG=DefaultRelease LINUX=debian-9 COMPILER=gcc
      install:
        - travis/install_linux.sh
      script:
        - travis/build.sh TestAll
      before_cache:
        - docker cp storm:/opt/storm/. .
      after_failure:
        - find build -iname '*err*.log' -type f -print -exec cat {} \;
    # ubuntu-17.10 - DefaultDebugTravis
    - stage: Test all
      os: linux
      compiler: gcc
      env: CONFIG=DefaultDebugTravis LINUX=ubuntu-17.10 COMPILER=gcc
      install:
        - travis/install_linux.sh
      script:
        - travis/build.sh TestAll
      before_cache:
        - docker cp storm:/opt/storm/. .
      after_failure:
        - find build -iname '*err*.log' -type f -print -exec cat {} \;
      after_success:
        - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD";
        - docker commit storm movesrwth/storm:travis-debug;
        - docker push movesrwth/storm:travis-debug;
    # ubuntu-17.10 - DefaultReleaseTravis
    - stage: Test all
      os: linux
      compiler: gcc
      env: CONFIG=DefaultReleaseTravis LINUX=ubuntu-17.10 COMPILER=gcc
      install:
        - travis/install_linux.sh
      script:
        - travis/build.sh TestAll
      before_cache:
        - docker cp storm:/opt/storm/. .
      after_failure:
        - find build -iname '*err*.log' -type f -print -exec cat {} \;
      after_success:
        - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD";
        - docker commit storm movesrwth/storm:travis;
        - docker push movesrwth/storm:travis;
    # ubuntu-18.04 - DefaultDebug
    - stage: Test all
      os: linux
      compiler: gcc
      env: CONFIG=DefaultDebug LINUX=ubuntu-18.04 COMPILER=gcc
      install:
        - travis/install_linux.sh
      script:
        - travis/build.sh TestAll
      before_cache:
        - docker cp storm:/opt/storm/. .
      after_failure:
        - find build -iname '*err*.log' -type f -print -exec cat {} \;
    # ubuntu-18.04 - DefaultRelease
    - stage: Test all
      os: linux
      compiler: gcc
      env: CONFIG=DefaultRelease LINUX=ubuntu-18.04 COMPILER=gcc
      install:
        - travis/install_linux.sh
      script:
        - travis/build.sh TestAll
      before_cache:
        - docker cp storm:/opt/storm/. .
      after_failure:
        - find build -iname '*err*.log' -type f -print -exec cat {} \;
  allow_failures:
    - stage: Build (1st run)
      os: linux
      env: CONFIG=DefaultReleaseTravis LINUX=ubuntu-17.10 COMPILER=gcc
    - stage: Build (2nd run)
      os: linux
      env: CONFIG=DefaultReleaseTravis LINUX=ubuntu-17.10 COMPILER=gcc
    - stage: Build (3rd run)
      os: linux
      env: CONFIG=DefaultReleaseTravis LINUX=ubuntu-17.10 COMPILER=gcc
    - stage: Build (4th run)
      os: linux
      env: CONFIG=DefaultReleaseTravis LINUX=ubuntu-17.10 COMPILER=gcc
    - stage: Test all
      os: linux
      env: CONFIG=DefaultReleaseTravis LINUX=ubuntu-17.10 COMPILER=gcc

