mdp

const int n; // size of the grid
const double p = 0.9;

const int xi=1;
const int yi=1;
const int xg=n;
const int yg=n;


formula begin = (x1=xi)&(y1=yi);
formula goal = (x1=xg)&(y1=yg);
formula intermediate = (x1=2)&(y1=5);

module robot
    x1 : [1..n] init 1; // x position of robot
	y1 : [1..n] init 1; // y position of robot
	
	[] x1<n -> p : (x1'=x1+1) + (1-0.5*p) : (x1'=x1+1) & (y1'=min(n,y1+1)) + (1-0.5*p) : (x1'=x1+1) & (y1'=max(1,y1-1)); // move right
	[] x1>1 -> p : (x1'=x1-1) + (1-0.5*p) : (x1'=x1-1) & (y1'=min(n,y1+1)) + (1-0.5*p) : (x1'=x1-1) & (y1'=max(1,y1-1)); // move left
	[] y1<n -> p : (y1'=y1+1) + (1-0.5*p) : (y1'=y1+1) & (x1'=min(n,x1+1)) + (1-0.5*p) : (y1'=y1+1) & (x1'=max(1,x1-1)); // move up
	[] y1>1 -> p : (y1'=y1-1) + (1-0.5*p) : (y1'=y1-1) & (x1'=min(n,x1+1)) + (1-0.5*p) : (y1'=y1-1) & (x1'=max(1,x1-1)); // move down
	
endmodule

//formula safe = ((floor(x1/2)<=0)|y1=5|y1=7|x1=1);
formula safe = (x1=1|x1=2|x1=4);
