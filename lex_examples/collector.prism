mdp 

const double p=0.99;

module robot
    x : [-1..21] init 0;
    y : [0..3];
    
    // fail
    [] x=-1 -> (x'=-1);
    // start
    [] x=0 -> p : (x'=1) + (1-p) : (x'=-1);
    [] x=0 -> p : (x'=2) + (1-p) : (x'=-1);
    [] x=1 -> p : (x'=3) + (1-p) : (x'=-1);
    [] x=1 -> p : (x'=4) + (1-p) : (x'=-1);
    [] x=2 -> p : (x'=5) + (1-p) : (x'=-1);
    [] x=2 -> p : (x'=6) + (1-p) : (x'=-1);
    [] x=3 -> p : (x'=7) + (1-p) : (x'=-1);
    [] x=4 -> p : (x'=7) + (1-p) : (x'=-1);
    [] x=4 -> p : (x'=8) + (1-p) : (x'=-1);
    [] x=5 -> p : (x'=8) + (1-p) : (x'=-1);
    [] x=5 -> p : (x'=9) + (1-p) : (x'=-1);
    [] x=6 -> p : (x'=9) + (1-p) : (x'=-1);
    [] x=6 -> p : (x'=10) + (1-p) : (x'=-1);
    [] x=7 -> p : (x'=11) + (1-p) : (x'=-1);
    [] x=8 -> p : (x'=12) + (1-p) : (x'=-1);
    [] x=14 -> p : (x'=17) + (1-p) : (x'=-1);
    [] x=11 -> p : (x'=14) + (1-p) : (x'=-1);
    [] x=11 -> p : (x'=15) + (1-p) : (x'=-1);
    
    // destination 2
    [] x=9 -> (x'=13) & (y'=1);
    [] x=13 -> (x'=9) & (y'=2);
    
    // destination 1
    [] x=10 -> (x'=10) & (y'=1);
    
    // destination 3
    [] x=12 -> (x'=16) & (y'=1);
    [] x=16 -> (x'=19) & (y'=2);
    [] x=19 -> (x'=12) & (y'=3);
    
    // destination 4
    [] x=15 -> (x'=18) & (y'=1);
    [] x=18 -> (x'=15) & (y'=2);
    
    // destination 5
    [] x=17 -> (x'=20) & (y'=1);
    [] x=20 -> (x'=21) & (y'=2);
    [] x=21 -> (x'=17) & (y'=3);
    
endmodule
